local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Camera = workspace.CurrentCamera

local espObjects = {}

local function createNameESP(model, entityName, headPartName)
    local head = model:FindFirstChild(headPartName) or model.PrimaryPart
    if not head then
        return
    end

    local nameGui = Instance.new("BillboardGui")
    nameGui.Size = UDim2.new(0, 100, 0, 50)
    nameGui.Adornee = head
    nameGui.ExtentsOffset = Vector3.new(0, 2, 0)
    nameGui.AlwaysOnTop = true
    nameGui.Parent = head

    local nameLabel = Instance.new("TextLabel")
    nameLabel.Size = UDim2.new(1, 0, 1, 0)
    nameLabel.BackgroundTransparency = 1
    nameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    nameLabel.TextStrokeTransparency = 0
    nameLabel.TextScaled = true
    nameLabel.Text = entityName
    nameLabel.Parent = nameGui

    espObjects[model] = {
        NameGui = nameGui,
        NameLabel = nameLabel
    }

    RunService.RenderStepped:Connect(function()
        if model.Parent and nameGui.Adornee then
        else
            espObjects[model] = nil
            nameGui:Destroy()
        end
    end)
end

local function monitorESPObjects()
    local replicatedStorage = workspace.Parent:GetService("ReplicatedStorage")
    local entities = replicatedStorage:WaitForChild("Shared"):WaitForChild("entities")

    local objectInfo = {
        Player = {name = function(player) return player.Name end, headPartName = "Head"},
        Soldier = {name = function(model) return "Soldier" end, headPartName = "Head"},
        old_Model = {name = function(model) return "Old Model" end, headPartName = "HumanoidRootPart"},
        LootSafe = {name = function(model) return "Loot Safe" end, headPartName = "Body"},
        SupplyDrop = {name = function(model) return "Supply Drop" end, headPartName = "Crates"},
        DroppedItem = {name = function(model) return "Dropped Item" end, headPartName = "Part"},
        Backpack = {name = function(model) return "Backpack" end, headPartName = "Model"}
    }

    for objectType, partInfo in pairs(objectInfo) do
        local folder = entities:FindFirstChild(objectType)
        if folder then
            for _, model in pairs(folder:GetChildren()) do
                createNameESP(model, partInfo.name(model), partInfo.headPartName)
            end

            folder.ChildAdded:Connect(function(newModel)
                createNameESP(newModel, partInfo.name(newModel), partInfo.headPartName)
            end)
        end
    end
end

monitorESPObjects()
